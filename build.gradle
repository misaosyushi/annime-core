buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

group 'com.annime.core'
version '0.0.1'
mainClassName = "com.annime.core.ApplicationKt"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    implementation "org.jetbrains.exposed:exposed:$exposed_version"
    implementation "mysql:mysql-connector-java:$mysql_driver_verion"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-locations:$ktor_version"

    implementation "org.koin:koin-ktor:$koin_version"
}

task fatJar(type: Jar) {
    manifest {
        attributes "Implementation-Title": project.name,
                "Implementation-Version": version,
                "Main-Class": mainClassName
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
    with jar
}

shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
